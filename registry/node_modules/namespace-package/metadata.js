// Installed Modules
var restify = require('restify')
var objhash = require('object-hash')

// Local Modules
var dalpkg = require('dal/package')
var logger = require('logger').child({component: 'namespace-package/metadata'})

module.exports = function namespaceMetadata (req, res, next) {
  req.package.tag = false

  if (typeof req.params.tag !== 'undefined') {
    req.package.tag = req.params.tag
  }

  logger.debug({package: req.package}, 'package info')

  dalpkg.get(req.package.id, function (err, result) {
    if (err) {
      logger.fatal({err: err}, 'dalpkg.get error')
      return next(err)
    }

    if (typeof result._id === 'undefined') {
      logger.info({package: result}, 'package not found')
      return next(new restify.NotFoundError('package not found'))
    }

    var result_data = result

    if (req.package.tag !== false) {
      if (typeof result['dist-tags'][req.package.tag] === 'undefined') {
        logger.warn({package: result}, 'specific version not found')
        return next(new restify.NotFoundError('specific package version not found'))
      }

      result_data = result.versions[result['dist-tags'][req.package.tag]]
    }

    var etag = '"' + objhash(result) + '"'

    logger.info({package: result_data}, 'package found')

    if (typeof req.headers['if-none-match'] !== 'undefined' && req.headers['if-none-match'] === etag) {
      logger.info({etag: etag}, 'etag matches')

      res.status(304)
      res.end()
      return next()
    }

    res.setHeader('etag', etag)
    res.send(result_data)
    return next()
  })
}
