var _ = require('lodash')
var uuid = require('node-uuid')

var pick_fields = [
  '_id',
  'name',
  'description',
  'dist-tags',
  'readme',
  'homepage',
  'keywords',
  'repository',
  'contributors',
  'bugs',
  'author'
]

module.exports = function (existingpkg, newpkg, user) {
  var pkg = _.clone(existingpkg)

  if (typeof pkg._id === 'undefined') {
    // assume new package
    pkg = _.merge(pkg, _.pick(newpkg, pick_fields))

    var date = new Date().toISOString()
    pkg.time = {
      created: date,
      modified: date
    }

    pkg.versions = {}
    pkg.maintainers = []
  }

  var created = pkg.time.created
  var modified = new Date().toISOString()

  delete pkg.time.created
  delete pkg.time.modified

  pkg._attachments = {}
  pkg['dist-tags'] = _.merge(pkg['dist-tags'] || {}, newpkg['dist-tags'])

  Object.keys(newpkg.versions).forEach(function (version) {
    pkg.time[version] = new Date().toISOString()

    pkg.versions[version] = newpkg.versions[version]

    pkg.description = newpkg.versions[version].description || 'no description provided'
    pkg.contributors = newpkg.versions[version].contributors || []
    pkg.homepage = newpkg.versions[version].homepage || ''
    pkg.keywords = newpkg.versions[version].keywords || []
    pkg.repository = newpkg.versions[version].repository || {}
  })

  pkg.time.created = created
  pkg.time.modified = modified

  pkg._rev = uuid.v1()

  if (typeof pkg.maintainers === 'undefined') {
    pkg.maintainers = []
  }

  var maintainer_found = false
  pkg.maintainers.forEach(function (m) {
    if (m.email === user.email) {
      maintainer_found = true
    }
  })

  if (maintainer_found === false) {
    pkg.maintainers.push({name: user.name, email: user.email})
  }

  return pkg
}
